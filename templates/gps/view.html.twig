{% extends "base.html.twig" %}

{% block content %}

    <h1>{{ track.name }}</h1>

    {% for version in track.versions %}
        <a class="btn btn-success" href="{{ path('gps-download', {id: version.id}) }}">download, version {{ loop.index }}</a>
        <button data-type="track-toggle" class="btn btn-info">show/hide</button>
    {% endfor %}

    {% if app.user %}
        <a href="{{ path('gps-new-version', {id:track.id}) }}" class="btn btn-success">add new version</a>
    {% endif %}

    <hr>

    <div style="height: 800px; width: 1000px;" id="map"></div>

    {% for version in track.versions %}
        version{{ loop.index }}: climb: {{ version.positiveElevation|number_format(0, '', '\'') }}m, descent: {{ version.negativeElevation|number_format(0, '', '\'') }}m
    {% endfor %}

    <div class="chart-container" style="height: 300px;">
        <canvas id="elevation" width="400" height="300">
            Elevation plot can't be shown!
            Your browser doesn't support canvas elements.
        </canvas>
    </div>

    <script>
        var map = L.map(
            'map',
            {
                gestureHandling: true,
                center:[
                    ({{ track.pointNorthEastLat }} + {{ track.pointSouthWestLat }}) / 2,
                    ({{ track.pointSouthWestLng + track.pointNorthEastLng}}) / 2
                ],
                zoom: 12
            }
        );
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        {% for version in track.versions %}
            (function() {
                var latlngs = [];

                {% for point in version.points %}
                    latlngs.push([
                        {{ point.lat }},
                        {{ point.lng }}
                    ]);
                {% endfor %}

                // @TODO change colors for different track versions
                var track = new AppTrack(
                    map,
                    L.polyline(latlngs, {color: 'red'})
                );

                track.show();

                var buttonToggle = document.querySelectorAll("[data-type=track-toggle")[{{ loop.index0 }}];
                buttonToggle.addEventListener('click', function() {
                    track.toggle();
                });

            })();
        {% endfor %}

        // elevation plot
        var ctx = document.getElementById('elevation').getContext('2d');
        var myChart = new window.chartJs(ctx, {
            type: 'line',
            data: {
                labels: {{ elevationLabels|json_encode|raw }},
                datasets: [{
                    label: 'Elevation',
                    data: {{ elevationData|json_encode|raw }},

                    borderWidth: 1,
                    backgroundColor: 'rgba(0, 0, 240, 0.2)'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: false
                        }
                    }]
                },
                tooltips: {
                    mode: 'nearest'
                }
            }
        });
    </script>
{% endblock %}
